# vim配置说明

## 一. 现有插件

看，写的提升

1.模糊搜索
fzf, fzf.vim, ctrlp
强烈推荐, 模糊搜索文件名，符号名, 快速grep

2. 索引插件
tagbar, NERDTree
简单索引, 目录树，没啥好说的

3. 自动补全
YCM
好用，但是安装复杂，配置也麻烦

4. git集成
vim-gitgutter, vcscommand.vim, git-blame.vim
vsccommand插件用久了，习惯了
git-blame快速插件当前行的最后一个改动者
vim-gitgutter比较多的功能，我主要用它的自动展示改动点

5. 编程语言
cvim(我只保留了其中一小部分功能)
vim-snipmate => 代码片段,不错

0. 其他
配色使用gruvbox(不用管终端配色，颜色也柔和)
nerdcommenter => 快速注释
vim-easy-align => 代码对齐
airline => 状态栏展示
bufexplorer => 快速切换buffer
vim-mark => 关键字高亮

## 二. 使用介绍

看代码
1. 配色使用gruvbox配色, 终端vim也展示得比较好, 文字都能分辨清晰
2. 把tab键展示成可见的符号, 拒绝tab,space混用缩进
3. 高亮智能递增搜索, 移动则取消高亮
4. 目录树，符号表, 模糊搜索行，轻松看代码
5. 其他XXX

写代码:
1. YCM自动补全
2. snipmate代码片段
3. XXX
let vim do typing?

### 补全说明

1. vim自带补全机制
我就常用上下文补全
<C-N> (<C-X><C-N>)
<C-P> (<C-X><C-P>的简写)
help 'complete'
help ins-completion

2. 更好的补全?基于语义的补全
ycm补全(目前就用作c,c++系列补全,python也可)
其他类型文件的补全呢, 待发掘使用

由于新版ycm对vim和编译器有点要求，考虑使用其他补全工具也用用
TODO: 补充ycm的使用配置方法, 通用泛型自动补全

3. 代码跳转
基于符号的跳转, 标记跳转
<C-]>与<C-T> <C-O> 跳转

## 三. 使用说明

1. 额外辅助工具安装

centos系列 (ubuntu系列, 详见vim-env项目的Dockerfile)
```bash
mkdir -p $HOME/.vim_swap
yum install -y ctags \
	cppcheck cpplint \
	clang-format astyle \
	ripgrep silversearcher-ag ack
```

2. XXX

### 在当前目录建立tags (c,cpp代码)
ctags -R --c-kinds=+p --c++-kinds=+px --fields=+iaS --extra=+q --languages=c,c++ .
