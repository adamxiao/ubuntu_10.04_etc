# 我使用的插件
# already removed
pydiction => python补全插件
bash-support => bash编写插件, 包括检查语法和运行bash脚本
cvim(c-support) => c,cpp编写插件, 包括编译链接运行程序
	=> 我选择仅仅保留一键编译运行程序的部分(或者也没必要?写一个简单的makefile就行了?)
SQLUtilities-4.0 => sql语句格式化插件
dbext-1300 => vim执行sql语句插件
code_complete-2.9 => 函数函数补全, 不实用, 几乎不用

#建立自动不全系统tags
ctags -R -f ~/.vim/systags --c-kinds=+p --c++-kinds=+px --fields=+iaS --extra=+q --python-kinds=-i /usr/include /usr/local/include
# 自己仅仅建立c和c++的tags
ctags -R -f ~/.vim/systags --c-kinds=+p --c++-kinds=+px --fields=+iaS --extra=+q --languages=c,c++ /usr/include

#建立库tags
ctags -R -f ~/.vim/libtags --c-kinds=+p --c++-kinds=+px --fields=+iaS --extra=+q --languages=c,c++ $TUXEDO_HOME/include $ORACLE_HOME/{precomp/public,rdbms/public,rdbms/demo,plsql/public} /crm20c_background/tools /crm20c_background/dev/mpw.tydic.src/include


#建立项目tags
ctags -R -f /crm20c_background/dev/src/tags --c-kinds=+p --c++-kinds=+px --fields=+iaS --extra=+q --languages=c,c++ /crm20c_background/dev/src

#在当前目录建立tags
ctags -R --c-kinds=+p --c++-kinds=+px --fields=+iaS --extra=+q --languages=c,c++ .

# ctags参数参考查看
ctags --list-kinds
